********************ABOUT DATA STRUCTURE CHOICE***********************
How do I quickly find a price level? binary tree + linked list
Binary tree is used for bid/offer book data structure. My binary tree class allows duplicate Keys :when adding a node<Key,Value> with an existing key, value of this node will be added to a linkedlist<Value> for this Key.

In average, It takes O(logn) to find a price level,  O(logn) to insert a new order.Because a binary search tree is not a balanced tree, in worst case it takes O(n) to find a price level. This can be improved if we use a balanced tree structure.

How do I quickly sweep the book? Binary tree in order walk and reverse order walk. O(n) time.

How do I quickly cancel a resting order? hash map + binary tree
Each order book has a HashMap<ExchangeOrderId,RestingOrder>, this map keeps track of complete resting orders(complete means once a resting order is partially filled,it is removed from the map, to make sure it can’t be cancelled).

In average, it takes O(1) to find the restingOrder, and takes O(logn) to delete it from tree.

**************************WHAT’S NEW***********************************
I_BOOK interface:
BidBook and OfferBook extend this interface. When we need to fill a buy order or sell order, we need to modify resting order from the opposite book. I use :”I_Book oppositeBook=getOppositeBook(order);” In this way, no matter the oppositeBook is a bidBook or OfferBook, we only need to call the methods through a single interface, rather than writing this part twice.

Resting Order class:
When an order is accepted, it become a resting order. There’s a ExchangeOrderId data field in resting order class. This orderId is generated by the exchange and was used as a key in order book’s hash map, for the sake of efficient cancellation.

OrderBook class:
OrderBook object tells exchange whether a GTC order can be filled(.isAvailable(GTCOrder)), it is capable of filling the GTC order(.fill(GTCOrder)), put an GTC order into the book(.enter(EXchangeOrderId,GTCOrder)) and cancel a order(.cancel(ExchangeOrderId)).
OrderBook does’t send message, it only passes information to exchange.

Exchange class:
processGTC : When a GTC order comes, exchange first check if this market id exist. If yes, then exchange ask order book if this GTC order can be filled. This process is a while loop, because a GTC can be filled to several resting orders as long as order book has appropriate resting orders available. After filling, the remaining part of this GTC order becomes a resting order in the order book.

processCancel: When a Cancel order comes, exchange first check is ExchangeOrderId is right.If yes, order book use ExchangeOrderID as the key to find the resting order and delete it.


*******************HOW DO I PROVE MY EXCHANGE WORKS**************************
In Test_MyExchange, I manually create several orders to test (i) price priority (ii) time priority (iii)cancel 

It outputs as below:
========After ClientId 13472L buy IBM  @100 200qty=========

OfferBook:

BidBook:
Price:100.0 Quantity:200 ClientId:13472 ExchangeOrderId:2

========After ClientId 13470L sell IBM  @100 400qty=========

OfferBook:
Price:100.0 Quantity:200 ClientId:13470 ExchangeOrderId:4
BidBook:


========After ClientId 13474L buy IBM @99.0 400qty=========

OfferBook:
Price:100.0 Quantity:200 ClientId:13470 ExchangeOrderId:4
BidBook:
Price:99.0 Quantity:400 ClientId:13474 ExchangeOrderId:5

========After ClientId 13474L buy IBM @99.9 300qty=========
OfferBook:
Price:100.0 Quantity:200 ClientId:13470 ExchangeOrderId:4
BidBook:
Price:99.9 Quantity:300 ClientId:13474 ExchangeOrderId:6
Price:99.0 Quantity:400 ClientId:13474 ExchangeOrderId:5

========After ClientId 13474L sell IBM @129.9 100qty=========
OfferBook:
Price:100.0 Quantity:200 ClientId:13470 ExchangeOrderId:4
Price:129.9 Quantity:100 ClientId:13474 ExchangeOrderId:7
BidBook:
Price:99.9 Quantity:300 ClientId:13474 ExchangeOrderId:6
Price:99.0 Quantity:400 ClientId:13474 ExchangeOrderId:5

========After ClientId 13476L sell @99, 500qty =========
OfferBook:
Price:100.0 Quantity:200 ClientId:13470 ExchangeOrderId:4
Price:129.9 Quantity:100 ClientId:13474 ExchangeOrderId:7
BidBook:
Price:99.0 Quantity:200 ClientId:13474 ExchangeOrderId:5

========After ClientId 13476L sell @99, 500qty =========
OfferBook:
Price:129.9 Quantity:100 ClientId:13474 ExchangeOrderId:7
BidBook:
Price:125.0 Quantity:50 ClientId:13476 ExchangeOrderId:11
Price:99.0 Quantity:200 ClientId:13474 ExchangeOrderId:5

========After ClientId 13472L buy IBM  @100 200qty=========

OfferBook:
Price:129.9 Quantity:100 ClientId:13474 ExchangeOrderId:7
BidBook:
Price:125.0 Quantity:50 ClientId:13476 ExchangeOrderId:11
Price:100.0 Quantity:200 ClientId:13472 ExchangeOrderId:12
Price:99.0 Quantity:200 ClientId:13474 ExchangeOrderId:5

========After ClientId 13472L cancel  exchangeOrderId 12=========

OfferBook:
Price:129.9 Quantity:100 ClientId:13474 ExchangeOrderId:7
BidBook:
Price:125.0 Quantity:50 ClientId:13476 ExchangeOrderId:11
Price:99.0 Quantity:200 ClientId:13474 ExchangeOrderId:5

========After ClientId 13472L buy IBM  @125 130qty=========

OfferBook:
Price:129.9 Quantity:100 ClientId:13474 ExchangeOrderId:7
BidBook:
Price:125.0 Quantity:50 ClientId:13476 ExchangeOrderId:11
Price:125.0 Quantity:130 ClientId:13472 ExchangeOrderId:13
Price:99.0 Quantity:200 ClientId:13474 ExchangeOrderId:5

========After ClientId 13472L buy IBM  @128 30qty=========

OfferBook:
Price:129.9 Quantity:100 ClientId:13474 ExchangeOrderId:7
BidBook:
Price:128.0 Quantity:30 ClientId:13472 ExchangeOrderId:14
Price:125.0 Quantity:50 ClientId:13476 ExchangeOrderId:11
Price:125.0 Quantity:130 ClientId:13472 ExchangeOrderId:13
Price:99.0 Quantity:200 ClientId:13474 ExchangeOrderId:5

========After ClientId 13472L sell IBM  @129.3 30qty=========

OfferBook:
Price:129.3 Quantity:30 ClientId:13472 ExchangeOrderId:15
Price:129.9 Quantity:100 ClientId:13474 ExchangeOrderId:7
BidBook:
Price:128.0 Quantity:30 ClientId:13472 ExchangeOrderId:14
Price:125.0 Quantity:50 ClientId:13476 ExchangeOrderId:11
Price:125.0 Quantity:130 ClientId:13472 ExchangeOrderId:13
Price:99.0 Quantity:200 ClientId:13474 ExchangeOrderId:5

========After ClientId 13472L sell IBM  @99 500qty=========

OfferBook:
Price:99.0 Quantity:90 ClientId:13472 ExchangeOrderId:20
Price:129.3 Quantity:30 ClientId:13472 ExchangeOrderId:15
Price:129.9 Quantity:100 ClientId:13474 ExchangeOrderId:7
BidBook: